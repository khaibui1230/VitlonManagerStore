// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuanVitLonManager.Data;

#nullable disable

namespace QuanVitLonManager.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250409143211_InitialDatabase")]
    partial class InitialDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1",
                            ConcurrencyStamp = "ca9e8afa-03ef-4208-b9fc-be6411c3fabd",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "2",
                            ConcurrencyStamp = "e0c38c60-2e50-47c8-ac77-23010d9f2af7",
                            Name = "Staff",
                            NormalizedName = "STAFF"
                        },
                        new
                        {
                            Id = "3",
                            ConcurrencyStamp = "c11fce88-53e6-4098-b230-5fb755c2523b",
                            Name = "Customer",
                            NormalizedName = "CUSTOMER"
                        },
                        new
                        {
                            Id = "4",
                            ConcurrencyStamp = "17cae6f0-68cc-40d3-9e70-ee16eb35bf59",
                            Name = "Chef",
                            NormalizedName = "CHEF"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "1",
                            RoleId = "1"
                        },
                        new
                        {
                            UserId = "2",
                            RoleId = "2"
                        },
                        new
                        {
                            UserId = "3",
                            RoleId = "3"
                        },
                        new
                        {
                            UserId = "4",
                            RoleId = "4"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("QuanVitLonManager.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1",
                            AccessFailedCount = 0,
                            Address = "Admin Address",
                            ConcurrencyStamp = "4945a04e-4718-476c-81f3-19559854e095",
                            CreatedAt = new DateTime(2025, 4, 9, 14, 32, 10, 354, DateTimeKind.Utc).AddTicks(6744),
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Admin",
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAECJPbiyHFCQHHMrnxg3rnjzXZFoieywHfehxqi3OegdJ3okLMVv9ydfLBKQx5cG5Zw==",
                            PhoneNumber = "0123456789",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "91baa4db-b21d-4402-8517-979d83b3b017",
                            TwoFactorEnabled = false,
                            UserName = "admin@gmail.com"
                        },
                        new
                        {
                            Id = "2",
                            AccessFailedCount = 0,
                            Address = "Staff Address",
                            ConcurrencyStamp = "921f6b4d-e799-495b-a6da-9526b66730ef",
                            CreatedAt = new DateTime(2025, 4, 9, 14, 32, 10, 412, DateTimeKind.Utc).AddTicks(8568),
                            Email = "staff@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Staff",
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "STAFF@GMAIL.COM",
                            NormalizedUserName = "STAFF@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEIcs1T1PlPIeQXLtmDHjyeoMGJl2DvckWvZPDkzo7ZwH0fIFs94kD07xcqo+n8NbYA==",
                            PhoneNumber = "0123456788",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ceaec550-ee09-4e05-b850-59b90297832e",
                            TwoFactorEnabled = false,
                            UserName = "staff@gmail.com"
                        },
                        new
                        {
                            Id = "3",
                            AccessFailedCount = 0,
                            Address = "Customer Address",
                            ConcurrencyStamp = "f5e4dbcf-56b7-4ad5-bb07-672206e4ef94",
                            CreatedAt = new DateTime(2025, 4, 9, 14, 32, 10, 496, DateTimeKind.Utc).AddTicks(4511),
                            Email = "customer@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Customer",
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "CUSTOMER@GMAIL.COM",
                            NormalizedUserName = "CUSTOMER@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAENaaw0tS9z7x26PejtYWc14LsyPPrt4Cd4q1rJvyWMcfb5YO1wjbMUYGymhNsDzrcA==",
                            PhoneNumber = "0123456787",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9d2db350-b523-4216-a2d6-a6e408455500",
                            TwoFactorEnabled = false,
                            UserName = "customer@gmail.com"
                        },
                        new
                        {
                            Id = "4",
                            AccessFailedCount = 0,
                            Address = "Chef Address",
                            ConcurrencyStamp = "086f8490-2d1b-4432-b601-e66f9eddc426",
                            CreatedAt = new DateTime(2025, 4, 9, 14, 32, 10, 600, DateTimeKind.Utc).AddTicks(2708),
                            Email = "chef@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Chef",
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "CHEF@GMAIL.COM",
                            NormalizedUserName = "CHEF@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEPpLaoglqXmMFsZBTJZbfGI8WVaNEpmd6enc0nP+/hN/Rpe1KWCCs5fcibo1PckRag==",
                            PhoneNumber = "0123456786",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9d294c47-4103-4afb-ace7-5f373142176b",
                            TwoFactorEnabled = false,
                            UserName = "chef@gmail.com"
                        });
                });

            modelBuilder.Entity("QuanVitLonManager.Models.CartItem", b =>
                {
                    b.Property<int>("CartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartItemId"));

                    b.Property<int>("MenuItemId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("UserCartId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CartItemId");

                    b.HasIndex("MenuItemId");

                    b.HasIndex("UserCartId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("QuanVitLonManager.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Các món chiên giòn",
                            DisplayOrder = 5,
                            ImageUrl = "/images/categories/mon-chien.jpg",
                            IsActive = true,
                            Name = "Món Chiên"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Các món xào ngon miệng",
                            DisplayOrder = 6,
                            ImageUrl = "/images/categories/mon-xao.jpg",
                            IsActive = true,
                            Name = "Món Xào"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Mì xào các loại",
                            DisplayOrder = 7,
                            ImageUrl = "/images/categories/mi-xao.jpg",
                            IsActive = true,
                            Name = "Mì Xào"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Các món bắp xào",
                            DisplayOrder = 8,
                            ImageUrl = "/images/categories/bap-xao.jpg",
                            IsActive = true,
                            Name = "Bắp Xào"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Các món luộc",
                            DisplayOrder = 9,
                            ImageUrl = "/images/categories/mon-luoc.jpg",
                            IsActive = true,
                            Name = "Món Luộc"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Đồ uống",
                            DisplayOrder = 10,
                            ImageUrl = "/images/categories/nuoc.jpg",
                            IsActive = true,
                            Name = "Nước giải khát"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Các loại nước chấm",
                            DisplayOrder = 11,
                            ImageUrl = "/images/categories/nuoc-cham.jpg",
                            IsActive = true,
                            Name = "Nước Chấm"
                        });
                });

            modelBuilder.Entity("QuanVitLonManager.Models.DishOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("MenuItemId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderType")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("MenuItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("DishOrders");
                });

            modelBuilder.Entity("QuanVitLonManager.Models.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Calories")
                        .HasColumnType("int");

                    b.Property<int?>("Carbs")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("DetailedDescription")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<int>("DiscountPercentage")
                        .HasColumnType("int");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<int?>("Fat")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Ingredients")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNew")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOnSale")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPopular")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("OriginalPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PreparationInstructions")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Protein")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            DiscountPercentage = 0,
                            DisplayOrder = 1,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Cút lộn chiên giòn chấm me",
                            OriginalPrice = 23000m,
                            Price = 23000m
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            DiscountPercentage = 0,
                            DisplayOrder = 2,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Cút lộn chiên giòn chấm sa tế",
                            OriginalPrice = 23000m,
                            Price = 23000m
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            DiscountPercentage = 0,
                            DisplayOrder = 3,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Cút lộn chiên giòn tương ớt",
                            OriginalPrice = 23000m,
                            Price = 23000m
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            DiscountPercentage = 0,
                            DisplayOrder = 4,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Cút lộn chiên giòn xí muội",
                            OriginalPrice = 23000m,
                            Price = 23000m
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            DiscountPercentage = 0,
                            DisplayOrder = 5,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Cút lộn chiên giòn mayone",
                            OriginalPrice = 23000m,
                            Price = 23000m
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            DiscountPercentage = 0,
                            DisplayOrder = 6,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Cút lộn chiên giòn sốt bơ hành",
                            OriginalPrice = 23000m,
                            Price = 23000m
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 1,
                            DiscountPercentage = 0,
                            DisplayOrder = 7,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Cút lộn chiên giòn sốt bơ tỏi",
                            OriginalPrice = 23000m,
                            Price = 23000m
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 1,
                            DiscountPercentage = 0,
                            DisplayOrder = 8,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Cút lộn chiên giòn phô mai hành",
                            OriginalPrice = 25000m,
                            Price = 25000m
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 1,
                            DiscountPercentage = 0,
                            DisplayOrder = 9,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Cút lộn chiên giòn phô mai tỏi",
                            OriginalPrice = 25000m,
                            Price = 25000m
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 1,
                            DiscountPercentage = 0,
                            DisplayOrder = 10,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Vịt lộn chiên giòn chấm me",
                            OriginalPrice = 24000m,
                            Price = 24000m
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 1,
                            DiscountPercentage = 0,
                            DisplayOrder = 11,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Vịt lộn chiên giòn chấm sa tế",
                            OriginalPrice = 24000m,
                            Price = 24000m
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 1,
                            DiscountPercentage = 0,
                            DisplayOrder = 12,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Vịt lộn chiên giòn tương ớt",
                            OriginalPrice = 24000m,
                            Price = 24000m
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 1,
                            DiscountPercentage = 0,
                            DisplayOrder = 13,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Vịt lộn chiên giòn xí muội",
                            OriginalPrice = 24000m,
                            Price = 24000m
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 1,
                            DiscountPercentage = 0,
                            DisplayOrder = 14,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Vịt lộn chiên giòn tương cà",
                            OriginalPrice = 24000m,
                            Price = 24000m
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 1,
                            DiscountPercentage = 0,
                            DisplayOrder = 15,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Vịt lộn chiên giòn mayone",
                            OriginalPrice = 24000m,
                            Price = 24000m
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 1,
                            DiscountPercentage = 0,
                            DisplayOrder = 16,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Vịt lộn chiên giòn sốt bơ hành",
                            OriginalPrice = 24000m,
                            Price = 24000m
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 1,
                            DiscountPercentage = 0,
                            DisplayOrder = 17,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Vịt lộn chiên giòn sốt bơ tỏi",
                            OriginalPrice = 24000m,
                            Price = 24000m
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 1,
                            DiscountPercentage = 0,
                            DisplayOrder = 18,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Vịt lộn chiên giòn phô mai hành",
                            OriginalPrice = 26000m,
                            Price = 26000m
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 1,
                            DiscountPercentage = 0,
                            DisplayOrder = 19,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Vịt lộn chiên giòn phô mai tỏi",
                            OriginalPrice = 26000m,
                            Price = 26000m
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 2,
                            DiscountPercentage = 0,
                            DisplayOrder = 1,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Cút xào me",
                            OriginalPrice = 21000m,
                            Price = 21000m
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 2,
                            DiscountPercentage = 0,
                            DisplayOrder = 2,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Cút xào bơ tỏi",
                            OriginalPrice = 21000m,
                            Price = 21000m
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = 2,
                            DiscountPercentage = 0,
                            DisplayOrder = 3,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Cút xào sa tế",
                            OriginalPrice = 21000m,
                            Price = 21000m
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = 2,
                            DiscountPercentage = 0,
                            DisplayOrder = 4,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Cút xào phô mai",
                            OriginalPrice = 24000m,
                            Price = 24000m
                        },
                        new
                        {
                            Id = 24,
                            CategoryId = 2,
                            DiscountPercentage = 0,
                            DisplayOrder = 5,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Cút xào rau muống me",
                            OriginalPrice = 23000m,
                            Price = 23000m
                        },
                        new
                        {
                            Id = 25,
                            CategoryId = 2,
                            DiscountPercentage = 0,
                            DisplayOrder = 6,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Cút xào rau muống bơ tỏi",
                            OriginalPrice = 23000m,
                            Price = 23000m
                        },
                        new
                        {
                            Id = 26,
                            CategoryId = 2,
                            DiscountPercentage = 0,
                            DisplayOrder = 7,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Cút xào rau muống sa tế",
                            OriginalPrice = 23000m,
                            Price = 23000m
                        },
                        new
                        {
                            Id = 27,
                            CategoryId = 2,
                            DiscountPercentage = 0,
                            DisplayOrder = 8,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Vịt xào me",
                            OriginalPrice = 21000m,
                            Price = 21000m
                        },
                        new
                        {
                            Id = 28,
                            CategoryId = 2,
                            DiscountPercentage = 0,
                            DisplayOrder = 9,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Vịt xào bơ tỏi",
                            OriginalPrice = 21000m,
                            Price = 21000m
                        },
                        new
                        {
                            Id = 29,
                            CategoryId = 2,
                            DiscountPercentage = 0,
                            DisplayOrder = 10,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Vịt xào sa tế",
                            OriginalPrice = 21000m,
                            Price = 21000m
                        },
                        new
                        {
                            Id = 30,
                            CategoryId = 2,
                            DiscountPercentage = 0,
                            DisplayOrder = 11,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Vịt xào phô mai",
                            OriginalPrice = 24000m,
                            Price = 24000m
                        },
                        new
                        {
                            Id = 31,
                            CategoryId = 2,
                            DiscountPercentage = 0,
                            DisplayOrder = 12,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Vịt xào rau muống me",
                            OriginalPrice = 23000m,
                            Price = 23000m
                        },
                        new
                        {
                            Id = 32,
                            CategoryId = 2,
                            DiscountPercentage = 0,
                            DisplayOrder = 13,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Vịt xào rau muống bơ tỏi",
                            OriginalPrice = 23000m,
                            Price = 23000m
                        },
                        new
                        {
                            Id = 33,
                            CategoryId = 2,
                            DiscountPercentage = 0,
                            DisplayOrder = 14,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Vịt xào rau muống sa tế",
                            OriginalPrice = 23000m,
                            Price = 23000m
                        },
                        new
                        {
                            Id = 34,
                            CategoryId = 2,
                            DiscountPercentage = 0,
                            DisplayOrder = 15,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Gà xào me",
                            OriginalPrice = 21000m,
                            Price = 21000m
                        },
                        new
                        {
                            Id = 35,
                            CategoryId = 2,
                            DiscountPercentage = 0,
                            DisplayOrder = 16,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Gà xào bơ tỏi",
                            OriginalPrice = 21000m,
                            Price = 21000m
                        },
                        new
                        {
                            Id = 36,
                            CategoryId = 2,
                            DiscountPercentage = 0,
                            DisplayOrder = 17,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Gà xào phô mai",
                            OriginalPrice = 24000m,
                            Price = 24000m
                        },
                        new
                        {
                            Id = 37,
                            CategoryId = 2,
                            DiscountPercentage = 0,
                            DisplayOrder = 18,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Gà xào rau muống me",
                            OriginalPrice = 23000m,
                            Price = 23000m
                        },
                        new
                        {
                            Id = 38,
                            CategoryId = 2,
                            DiscountPercentage = 0,
                            DisplayOrder = 19,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Gà xào rau muống bơ tỏi",
                            OriginalPrice = 23000m,
                            Price = 23000m
                        },
                        new
                        {
                            Id = 39,
                            CategoryId = 2,
                            DiscountPercentage = 0,
                            DisplayOrder = 20,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Gà xào rau muống sa tế",
                            OriginalPrice = 23000m,
                            Price = 23000m
                        },
                        new
                        {
                            Id = 40,
                            CategoryId = 3,
                            DiscountPercentage = 0,
                            DisplayOrder = 1,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Mì xào rau muống không trứng",
                            OriginalPrice = 15000m,
                            Price = 15000m
                        },
                        new
                        {
                            Id = 41,
                            CategoryId = 3,
                            DiscountPercentage = 0,
                            DisplayOrder = 2,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Mì xào rau muống cút lộn",
                            OriginalPrice = 32000m,
                            Price = 32000m
                        },
                        new
                        {
                            Id = 42,
                            CategoryId = 3,
                            DiscountPercentage = 0,
                            DisplayOrder = 3,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Mì xào rau muống vịt lộn",
                            OriginalPrice = 32000m,
                            Price = 32000m
                        },
                        new
                        {
                            Id = 43,
                            CategoryId = 3,
                            DiscountPercentage = 0,
                            DisplayOrder = 4,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Mì xào rau muống hột gà nướng",
                            OriginalPrice = 32000m,
                            Price = 32000m
                        },
                        new
                        {
                            Id = 44,
                            CategoryId = 3,
                            DiscountPercentage = 0,
                            DisplayOrder = 5,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Mì xào rau muống bò",
                            OriginalPrice = 35000m,
                            Price = 35000m
                        },
                        new
                        {
                            Id = 45,
                            CategoryId = 3,
                            DiscountPercentage = 0,
                            DisplayOrder = 6,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Nui xào rau muống bò",
                            OriginalPrice = 35000m,
                            Price = 35000m
                        },
                        new
                        {
                            Id = 46,
                            CategoryId = 4,
                            DiscountPercentage = 0,
                            DisplayOrder = 1,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Bắp xào truyền thống",
                            OriginalPrice = 20000m,
                            Price = 20000m
                        },
                        new
                        {
                            Id = 47,
                            CategoryId = 4,
                            DiscountPercentage = 0,
                            DisplayOrder = 2,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Bắp xào trứng muối",
                            OriginalPrice = 27000m,
                            Price = 27000m
                        },
                        new
                        {
                            Id = 48,
                            CategoryId = 4,
                            DiscountPercentage = 0,
                            DisplayOrder = 3,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Bắp xào phô mai",
                            OriginalPrice = 27000m,
                            Price = 27000m
                        },
                        new
                        {
                            Id = 49,
                            CategoryId = 4,
                            DiscountPercentage = 0,
                            DisplayOrder = 4,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Bắp xào Cút lộn",
                            OriginalPrice = 30000m,
                            Price = 30000m
                        },
                        new
                        {
                            Id = 50,
                            CategoryId = 4,
                            DiscountPercentage = 0,
                            DisplayOrder = 5,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Bắp xào Vịt lộn",
                            OriginalPrice = 30000m,
                            Price = 30000m
                        },
                        new
                        {
                            Id = 51,
                            CategoryId = 4,
                            DiscountPercentage = 0,
                            DisplayOrder = 6,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Bắp xào Hột gà nướng",
                            OriginalPrice = 30000m,
                            Price = 30000m
                        },
                        new
                        {
                            Id = 52,
                            CategoryId = 5,
                            DiscountPercentage = 0,
                            DisplayOrder = 1,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Cút lộn luộc",
                            OriginalPrice = 14000m,
                            Price = 14000m
                        },
                        new
                        {
                            Id = 53,
                            CategoryId = 5,
                            DiscountPercentage = 0,
                            DisplayOrder = 2,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Vịt lộn luộc",
                            OriginalPrice = 8000m,
                            Price = 8000m
                        },
                        new
                        {
                            Id = 54,
                            CategoryId = 5,
                            DiscountPercentage = 0,
                            DisplayOrder = 3,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Trứng gà nướng",
                            OriginalPrice = 7000m,
                            Price = 7000m
                        },
                        new
                        {
                            Id = 55,
                            CategoryId = 6,
                            DiscountPercentage = 0,
                            DisplayOrder = 1,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Sting",
                            OriginalPrice = 12000m,
                            Price = 12000m
                        },
                        new
                        {
                            Id = 56,
                            CategoryId = 6,
                            DiscountPercentage = 0,
                            DisplayOrder = 2,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Pepsi",
                            OriginalPrice = 12000m,
                            Price = 12000m
                        },
                        new
                        {
                            Id = 57,
                            CategoryId = 6,
                            DiscountPercentage = 0,
                            DisplayOrder = 3,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "7up",
                            OriginalPrice = 12000m,
                            Price = 12000m
                        },
                        new
                        {
                            Id = 58,
                            CategoryId = 6,
                            DiscountPercentage = 0,
                            DisplayOrder = 4,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Coca",
                            OriginalPrice = 12000m,
                            Price = 12000m
                        },
                        new
                        {
                            Id = 59,
                            CategoryId = 6,
                            DiscountPercentage = 0,
                            DisplayOrder = 5,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Xá xị",
                            OriginalPrice = 12000m,
                            Price = 12000m
                        },
                        new
                        {
                            Id = 60,
                            CategoryId = 6,
                            DiscountPercentage = 0,
                            DisplayOrder = 6,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Nước suối",
                            OriginalPrice = 8000m,
                            Price = 8000m
                        },
                        new
                        {
                            Id = 61,
                            CategoryId = 7,
                            DiscountPercentage = 0,
                            DisplayOrder = 1,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Nước chấm me",
                            OriginalPrice = 2000m,
                            Price = 2000m
                        },
                        new
                        {
                            Id = 62,
                            CategoryId = 7,
                            DiscountPercentage = 0,
                            DisplayOrder = 2,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Nước chấm sa tế",
                            OriginalPrice = 2000m,
                            Price = 2000m
                        },
                        new
                        {
                            Id = 63,
                            CategoryId = 7,
                            DiscountPercentage = 0,
                            DisplayOrder = 3,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Nước chấm xí muội",
                            OriginalPrice = 2000m,
                            Price = 2000m
                        },
                        new
                        {
                            Id = 64,
                            CategoryId = 7,
                            DiscountPercentage = 0,
                            DisplayOrder = 4,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Nước chấm tương ớt",
                            OriginalPrice = 2000m,
                            Price = 2000m
                        },
                        new
                        {
                            Id = 65,
                            CategoryId = 7,
                            DiscountPercentage = 0,
                            DisplayOrder = 5,
                            IsAvailable = true,
                            IsNew = false,
                            IsOnSale = false,
                            IsPopular = false,
                            Name = "Nước chấm mayonese",
                            OriginalPrice = 2000m,
                            Price = 2000m
                        });
                });

            modelBuilder.Entity("QuanVitLonManager.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CustomerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("TableId")
                        .HasColumnType("int");

                    b.Property<string>("TableNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("TableId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("QuanVitLonManager.Models.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MenuItemId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Subtotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("MenuItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("QuanVitLonManager.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("NumberOfGuests")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservationTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TableId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("TableId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("QuanVitLonManager.Models.RestaurantInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GoodbyeMessage")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("LogoUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TaxId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WelcomeMessage")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.ToTable("RestaurantInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "354 lê văn thọ, phường 11 quận gò vấp, tp hcm",
                            Description = "Nhà hàng chuyên phục vụ các món vịt lộn và cút lộn",
                            Email = "quanHienvitlon@gmail.com",
                            GoodbyeMessage = "Cảm ơn quý khách đã ghé thăm",
                            LogoUrl = "/images/logo.png",
                            Name = "Quán Hiển vịt lộn - Cút lộn",
                            Phone = "0379665639",
                            TaxId = "1234567890",
                            WelcomeMessage = "Chào mừng đến với Quán Vịt Lộn"
                        });
                });

            modelBuilder.Entity("QuanVitLonManager.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsVerifiedPurchase")
                        .HasColumnType("bit");

                    b.Property<int>("MenuItemId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("MenuItemId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("QuanVitLonManager.Models.Table", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TableNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Tables");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Area = "Tầng 1",
                            Capacity = 4,
                            IsAvailable = true,
                            Status = 0,
                            TableNumber = "Bàn 1"
                        },
                        new
                        {
                            Id = 2,
                            Area = "Tầng 1",
                            Capacity = 4,
                            IsAvailable = true,
                            Status = 0,
                            TableNumber = "Bàn 2"
                        },
                        new
                        {
                            Id = 3,
                            Area = "Tầng 1",
                            Capacity = 6,
                            IsAvailable = true,
                            Status = 0,
                            TableNumber = "Bàn 3"
                        },
                        new
                        {
                            Id = 4,
                            Area = "Tầng 2",
                            Capacity = 4,
                            IsAvailable = true,
                            Status = 0,
                            TableNumber = "Bàn 4"
                        },
                        new
                        {
                            Id = 5,
                            Area = "Tầng 2",
                            Capacity = 6,
                            IsAvailable = true,
                            Status = 0,
                            TableNumber = "Bàn 5"
                        });
                });

            modelBuilder.Entity("QuanVitLonManager.Models.UserCart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserCarts");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("QuanVitLonManager.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("QuanVitLonManager.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanVitLonManager.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("QuanVitLonManager.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QuanVitLonManager.Models.CartItem", b =>
                {
                    b.HasOne("QuanVitLonManager.Models.MenuItem", "MenuItem")
                        .WithMany()
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanVitLonManager.Models.UserCart", "UserCart")
                        .WithMany("CartItems")
                        .HasForeignKey("UserCartId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("MenuItem");

                    b.Navigation("UserCart");
                });

            modelBuilder.Entity("QuanVitLonManager.Models.DishOrder", b =>
                {
                    b.HasOne("QuanVitLonManager.Models.MenuItem", "MenuItem")
                        .WithMany()
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("QuanVitLonManager.Models.Order", "Order")
                        .WithMany("DishOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("MenuItem");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("QuanVitLonManager.Models.MenuItem", b =>
                {
                    b.HasOne("QuanVitLonManager.Models.Category", "Category")
                        .WithMany("MenuItems")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Category");
                });

            modelBuilder.Entity("QuanVitLonManager.Models.Order", b =>
                {
                    b.HasOne("QuanVitLonManager.Models.Table", "Table")
                        .WithMany()
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("QuanVitLonManager.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Table");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuanVitLonManager.Models.OrderDetail", b =>
                {
                    b.HasOne("QuanVitLonManager.Models.MenuItem", "MenuItem")
                        .WithMany("OrderDetails")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("QuanVitLonManager.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuItem");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("QuanVitLonManager.Models.Reservation", b =>
                {
                    b.HasOne("QuanVitLonManager.Models.Table", "Table")
                        .WithMany("Reservations")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("QuanVitLonManager.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Table");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuanVitLonManager.Models.Review", b =>
                {
                    b.HasOne("QuanVitLonManager.Models.MenuItem", "MenuItem")
                        .WithMany("Reviews")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanVitLonManager.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuItem");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuanVitLonManager.Models.UserCart", b =>
                {
                    b.HasOne("QuanVitLonManager.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuanVitLonManager.Models.Category", b =>
                {
                    b.Navigation("MenuItems");
                });

            modelBuilder.Entity("QuanVitLonManager.Models.MenuItem", b =>
                {
                    b.Navigation("OrderDetails");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("QuanVitLonManager.Models.Order", b =>
                {
                    b.Navigation("DishOrders");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("QuanVitLonManager.Models.Table", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("QuanVitLonManager.Models.UserCart", b =>
                {
                    b.Navigation("CartItems");
                });
#pragma warning restore 612, 618
        }
    }
}
