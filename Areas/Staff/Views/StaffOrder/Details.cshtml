@model QuanVitLonManager.Models.Order
@using QuanVitLonManager.Models

@{
    ViewData["Title"] = $"Quản lý đơn hàng #{Model.Id}";
    Layout = "_StaffLayout";
}

<div class="container-fluid py-4">
    <div class="card shadow-sm border-0">
        <div class="card-header bg-primary text-white">
            <div class="d-flex justify-content-between align-items-center">
                <h5 class="mb-0">Chi tiết đơn hàng #@Model.Id</h5>
                <div>
                    <span class="badge @(Model.PaymentStatus == PaymentStatus.Paid ? "bg-success" : "bg-warning text-dark")">
                        @(Model.PaymentStatus == PaymentStatus.Paid ? "Đã thanh toán" : "Chưa thanh toán")
                    </span>
                    <span class="badge @GetOrderStatusBadgeClass(Model.Status)">
                        @GetOrderStatusText(Model.Status)
                    </span>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-6">
                    <div class="card mb-3">
                        <div class="card-header bg-light">
                            <h6 class="mb-0"><i class="fas fa-info-circle me-2"></i>Thông tin đơn hàng</h6>
                        </div>
                        <div class="card-body">
                            <table class="table table-borderless">
                                <tr>
                                    <td width="40%"><strong>Mã đơn hàng:</strong></td>
                                    <td>#@Model.Id</td>
                                </tr>
                                <tr>
                                    <td><strong>Thời gian đặt:</strong></td>
                                    <td>@Model.OrderDate.ToString("dd/MM/yyyy HH:mm")</td>
                                </tr>
                                <tr>
                                    <td><strong>Loại đơn hàng:</strong></td>
                                    <td>
                                        @if (Model.OrderType == OrderType.DineIn)
                                        {
                                            <span class="badge bg-info">Ăn tại chỗ</span>
                                            <span class="ms-2">Bàn số: @Model.TableNumber</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary">Mang đi</span>
                                        }
                                    </td>
                                </tr>
                                @if(!string.IsNullOrEmpty(Model.Notes))
                                {
                                    <tr>
                                        <td><strong>Ghi chú:</strong></td>
                                        <td>@Model.Notes</td>
                                    </tr>
                                }
                                <tr>
                                    <td><strong>Tổng tiền:</strong></td>
                                    <td class="fw-bold text-primary">@Model.TotalAmount.ToString("N0") VNĐ</td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card mb-3">
                        <div class="card-header bg-light">
                            <h6 class="mb-0"><i class="fas fa-money-bill-wave me-2"></i>Thông tin thanh toán</h6>
                        </div>
                        <div class="card-body">
                            <div id="payment-info">
                                <table class="table table-borderless">
                                    <tr>
                                        <td width="40%"><strong>Trạng thái:</strong></td>
                                        <td>
                                            <span id="payment-status-badge" class="badge @(Model.PaymentStatus == PaymentStatus.Paid ? "bg-success" : "bg-warning text-dark")">
                                                @(Model.PaymentStatus == PaymentStatus.Paid ? "Đã thanh toán" : "Chưa thanh toán")
                                            </span>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td><strong>Phương thức:</strong></td>
                                        <td id="payment-method">
                                            @if (Model.PaymentStatus == PaymentStatus.Paid)
                                            {
                                                <span class="badge @GetPaymentMethodBadgeClass(Model.PaymentMethod)">
                                                    @GetPaymentMethodText(Model.PaymentMethod)
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="text-muted">Chưa thanh toán</span>
                                            }
                                        </td>
                                    </tr>
                                    <tr>
                                        <td><strong>Thời gian thanh toán:</strong></td>
                                        <td id="payment-date">
                                            @if (Model.PaymentStatus == PaymentStatus.Paid && Model.PaymentDate.HasValue)
                                            {
                                                @Model.PaymentDate.Value.ToString("dd/MM/yyyy HH:mm")
                                            }
                                            else
                                            {
                                                <span class="text-muted">Chưa thanh toán</span>
                                            }
                                        </td>
                                    </tr>
                                </table>
                            </div>

                            @if (Model.PaymentStatus == PaymentStatus.Unpaid)
                            {
                                <div class="mt-3">
                                    <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#paymentModal">
                                        <i class="fas fa-cash-register me-2"></i>Cập nhật thanh toán
                                    </button>
                                    
                                    <div class="alert alert-info mt-3 mb-0">
                                        <p class="mb-1"><i class="fas fa-info-circle me-2"></i>Lưu ý cho nhân viên:</p>
                                        <p class="mb-0">Thanh toán chỉ được thực hiện sau khi khách hàng đã dùng bữa xong. Hãy kiểm tra kỹ tất cả các món ăn đã được phục vụ trước khi xác nhận thanh toán.</p>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <div class="card mt-3">
                <div class="card-header bg-light">
                    <h6 class="mb-0"><i class="fas fa-clipboard-list me-2"></i>Chi tiết món ăn</h6>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead class="table-light">
                                <tr>
                                    <th>Món ăn</th>
                                    <th class="text-center">Số lượng</th>
                                    <th class="text-end">Đơn giá</th>
                                    <th class="text-end">Thành tiền</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.OrderDetails)
                                {
                                    <tr>
                                        <td>
                                            <div class="d-flex align-items-center">
                                                @if (item.MenuItem != null && !string.IsNullOrEmpty(item.MenuItem.ImageUrl))
                                                {
                                                    <img src="@item.MenuItem.ImageUrl" class="rounded me-3" style="width: 40px; height: 40px; object-fit: cover;">
                                                }
                                                <div>
                                                    <div>@(item.MenuItem?.Name ?? "Món không tồn tại")</div>
                                                    @if (item.MenuItem?.Category != null)
                                                    {
                                                        <small class="text-muted">@item.MenuItem.Category.Name</small>
                                                    }
                                                </div>
                                            </div>
                                        </td>
                                        <td class="text-center">@item.Quantity</td>
                                        <td class="text-end">@item.Price.ToString("N0") VNĐ</td>
                                        <td class="text-end">@((item.Price * item.Quantity).ToString("N0")) VNĐ</td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot class="table-light">
                                <tr>
                                    <th colspan="3" class="text-end">Tổng cộng:</th>
                                    <th class="text-end">@Model.TotalAmount.ToString("N0") VNĐ</th>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>

            <div class="mt-4">
                <a asp-action="Orders" class="btn btn-secondary">
                    <i class="fas fa-arrow-left me-1"></i>Quay lại
                </a>
                @if (Model.PaymentStatus == PaymentStatus.Paid)
                {
                    <a asp-controller="CustomerBill" asp-action="Details" asp-route-id="@Model.Id" target="_blank" class="btn btn-info ms-2">
                        <i class="fas fa-print me-1"></i>In hóa đơn
                    </a>
                }
                @if (Model.OrderType == OrderType.DineIn && Model.Status != OrderStatus.Billing && Model.Status != OrderStatus.Completed && Model.Status != OrderStatus.Cancelled)
                {
                    <button type="button" class="btn btn-primary ms-2" id="btnUpdateStatusToBilling">
                        <i class="fas fa-cash-register me-1"></i>Khách ăn xong - Chuẩn bị tính tiền
                    </button>
                }
            </div>
        </div>
    </div>
</div>

<!-- Modal cập nhật thanh toán -->
<div class="modal fade" id="paymentModal" tabindex="-1" aria-labelledby="paymentModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="paymentModalLabel">Cập nhật thanh toán</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p class="mb-3">Xác nhận thanh toán cho đơn hàng <strong>#@Model.Id</strong> với số tiền <strong>@Model.TotalAmount.ToString("N0") VNĐ</strong>?</p>
                
                <div class="mb-3">
                    <label class="form-label">Phương thức thanh toán</label>
                    <div class="d-flex flex-wrap gap-2">
                        <div class="form-check payment-method-option">
                            <input class="form-check-input" type="radio" name="paymentMethod" id="method-cash" value="@PaymentMethod.Cash" checked>
                            <label class="form-check-label" for="method-cash">
                                <i class="fas fa-money-bill-wave me-1"></i>Tiền mặt
                            </label>
                        </div>
                        <div class="form-check payment-method-option">
                            <input class="form-check-input" type="radio" name="paymentMethod" id="method-card" value="@PaymentMethod.Card">
                            <label class="form-check-label" for="method-card">
                                <i class="fas fa-credit-card me-1"></i>Thẻ
                            </label>
                        </div>
                        <div class="form-check payment-method-option">
                            <input class="form-check-input" type="radio" name="paymentMethod" id="method-momo" value="@PaymentMethod.MoMo">
                            <label class="form-check-label" for="method-momo">
                                <i class="fas fa-wallet me-1"></i>MoMo
                            </label>
                        </div>
                        <div class="form-check payment-method-option">
                            <input class="form-check-input" type="radio" name="paymentMethod" id="method-banking" value="@PaymentMethod.Banking">
                            <label class="form-check-label" for="method-banking">
                                <i class="fas fa-university me-1"></i>Chuyển khoản
                            </label>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-success" id="confirmPayment">
                    <i class="fas fa-check-circle me-1"></i>Xác nhận thanh toán
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Xử lý khi nhấn nút xác nhận thanh toán
            $("#confirmPayment").click(function() {
                // Lấy phương thức thanh toán đã chọn
                var selectedPaymentMethod = $("input[name='paymentMethod']:checked").val();
                
                // Gửi yêu cầu AJAX để cập nhật thanh toán
                $.ajax({
                    url: '@Url.Action("UpdatePayment", "StaffOrder")',
                    type: 'POST',
                    data: {
                        orderId: @Model.Id,
                        paymentMethod: selectedPaymentMethod
                    },
                    success: function(result) {
                        if (result.success) {
                            // Cập nhật UI
                            $("#payment-status-badge").removeClass("bg-warning text-dark").addClass("bg-success");
                            $("#payment-status-badge").text("Đã thanh toán");
                            
                            // Cập nhật phương thức thanh toán
                            $("#payment-method").html('<span class="badge ' + getPaymentMethodBadgeClass(selectedPaymentMethod) + '">' + 
                                getPaymentMethodText(selectedPaymentMethod) + '</span>');
                            
                            // Cập nhật thời gian thanh toán
                            $("#payment-date").text(result.paymentDate);
                            
                            // Đóng modal
                            $("#paymentModal").modal('hide');
                            
                            // Hiển thị thông báo thành công
                            alert("Cập nhật thanh toán thành công!");
                            
                            // Tải lại trang để cập nhật đầy đủ thông tin
                            location.reload();
                        } else {
                            alert("Có lỗi xảy ra: " + result.message);
                        }
                    },
                    error: function() {
                        alert("Đã xảy ra lỗi khi cập nhật thanh toán!");
                    }
                });
            });
            
            // Xử lý nút cập nhật trạng thái sang tính tiền
            $("#btnUpdateStatusToBilling").click(function() {
                if(confirm("Xác nhận khách đã ăn xong và chuyển sang tính tiền?")) {
                    // Gửi yêu cầu AJAX để cập nhật trạng thái
                    $.ajax({
                        url: '@Url.Action("UpdateStatus", "StaffOrder")',
                        type: 'POST',
                        data: {
                            id: @Model.Id,
                            status: 'Billing'
                        },
                        success: function(result) {
                            if (result.success) {
                                // Hiển thị thông báo
                                alert("Đã cập nhật trạng thái đơn hàng sang Đang tính tiền!");
                                
                                // Cập nhật UI - thay badge trạng thái
                                $(".badge:contains('@GetOrderStatusText(Model.Status)')").removeClass("@GetOrderStatusBadgeClass(Model.Status)").addClass(result.statusBadgeClass);
                                $(".badge:contains('@GetOrderStatusText(Model.Status)')").text(result.statusText);
                                
                                // Ẩn nút cập nhật trạng thái
                                $("#btnUpdateStatusToBilling").hide();
                                
                                // Tải lại trang để cập nhật đầy đủ thông tin
                                location.reload();
                            } else {
                                alert("Có lỗi xảy ra: " + result.message);
                            }
                        },
                        error: function() {
                            alert("Đã xảy ra lỗi khi cập nhật trạng thái đơn hàng!");
                        }
                    });
                }
            });
            
            // Hàm lấy class cho badge phương thức thanh toán
            function getPaymentMethodBadgeClass(method) {
                switch(method) {
                    case '@PaymentMethod.Cash': return 'bg-success';
                    case '@PaymentMethod.Card': return 'bg-primary';
                    case '@PaymentMethod.MoMo': return 'bg-danger';
                    case '@PaymentMethod.Banking': return 'bg-info';
                    default: return 'bg-secondary';
                }
            }
            
            // Hàm lấy text cho phương thức thanh toán
            function getPaymentMethodText(method) {
                switch(method) {
                    case '@PaymentMethod.Cash': return 'Tiền mặt';
                    case '@PaymentMethod.Card': return 'Thẻ tín dụng/ghi nợ';
                    case '@PaymentMethod.MoMo': return 'Ví MoMo';
                    case '@PaymentMethod.Banking': return 'Chuyển khoản';
                    default: return 'Không xác định';
                }
            }
        });
    </script>
}

@section Styles {
    <style>
        .payment-method-option {
            padding: 10px;
            border: 1px solid #dee2e6;
            border-radius: 6px;
            margin-right: 10px;
            flex: 1;
            min-width: 110px;
            text-align: center;
        }
        
        .payment-method-option:hover {
            background-color: rgba(13, 110, 253, 0.05);
            border-color: #0d6efd;
        }
        
        .form-check-input:checked + .form-check-label {
            font-weight: bold;
            color: #0d6efd;
        }
        
        /* Responsive styles */
        @@media (max-width: 576px) {
            .payment-method-option {
                min-width: 100%;
                margin-bottom: 10px;
            }
        }
    </style>
}

@functions {
    string GetOrderStatusBadgeClass(OrderStatus status)
    {
        return status switch
        {
            OrderStatus.Pending => "bg-warning text-dark",
            OrderStatus.Confirmed => "bg-info",
            OrderStatus.Billing => "bg-primary",
            OrderStatus.Completed => "bg-success",
            OrderStatus.Cancelled => "bg-danger",
            _ => "bg-secondary"
        };
    }

    string GetOrderStatusText(OrderStatus status)
    {
        return status switch
        {
            OrderStatus.Pending => "Đang chờ xác nhận",
            OrderStatus.Confirmed => "Đã xác nhận",
            OrderStatus.Billing => "Đang chuẩn bị",
            OrderStatus.Completed => "Đã hoàn thành",
            OrderStatus.Cancelled => "Đã hủy",
            _ => "Không xác định"
        };
    }
    
    string GetPaymentMethodBadgeClass(PaymentMethod method)
    {
        return method switch
        {
            PaymentMethod.Cash => "bg-success",
            PaymentMethod.Card => "bg-primary",
            PaymentMethod.MoMo => "bg-danger",
            PaymentMethod.Banking => "bg-info",
            _ => "bg-secondary"
        };
    }
    
    string GetPaymentMethodText(PaymentMethod method)
    {
        return method switch
        {
            PaymentMethod.Cash => "Tiền mặt",
            PaymentMethod.Card => "Thẻ tín dụng/ghi nợ",
            PaymentMethod.MoMo => "Ví MoMo",
            PaymentMethod.Banking => "Chuyển khoản",
            _ => "Không xác định"
        };
    }
}
